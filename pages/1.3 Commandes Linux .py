import streamlit as st


st.set_page_config(
    page_icon="üêß",
)

st.markdown("<h1 style='text-align: center; color: black;'>Les commandes Linux les plus utilis√©es</h1>", unsafe_allow_html=True)

st.markdown("""
### Win + A
Utiliser la combinaison `win + a` pour chercher une application.

### Ctrl + H 
Utiliser la combinaison `ctrl + h` pour voir les fichiers cach√©s.

click [ici](https://aciah-linux.org/spip.php?article226) pour plus de Combinaisons de touches.

### date
La commande `date` de Linux affiche et d√©finit la date et l'heure du syst√®me.

la commande `date --utc` ou `date -u` affiche la date et heure du syst√®me en UTC (Temps universel coordonn√©).

Utilisez l'option `-date` pour afficher les dates pass√©es ou dans le future de Linux. 
##### Exemples : 
- `date --date="2 year ago"`
- `date --date="yesterday"`
- `date --date="20 sec ago"`
- `date --date="next monday"`
- `date --date="5 day"`
- `date --date="tomorrow"`

### cal
La commande `cal` affiche un calendrier.

L'option `-A` pour afficher le nombre de mois apr√®s la date d'aujourd'hui
L'option `-B`   pour afficher le nombre de mois avant la date d'aujourd'hui

### echo $ PATH
`$ PATH` est une variable d'environnement li√©e √† l'emplacement du fichier. Quand on tape une commande √† ex√©cuter, le syst√®me la recherche dans les r√©pertoires sp√©cifi√©s par `PATH` dans l'ordre sp√©cifi√©.
 Vous pouvez afficher les r√©pertoires sp√©cifi√©s en tapant `echo $ PATH` dans le terminal. ... Vous pouvez rechercher votre chemin en tapant `echo $ PATH`.

 ### wich
 La commande `which` recherche l'ex√©cutable dans les diff√©rents r√©pertoires list√©s dans la variable d'environnement `PATH` 
 (et utilise le m√™me algorithme que `BASH`).

 ##### Exemple : 
 La commande `which date` va chercher o√π se trouve la commande `date`

 ### man 
 La commande `man` permet de visionner le manuel d'une commande ou le manuel d'un fichier de configuration.
 ##### Exemple : 
 `man date`

 ### history
 la commande `history` permet de remonter dans les commandes que nous avons pass√©es. Apr√®s cette commande, on peut taper `! 80` par exemple pour ex√©cuter la commande num√©ro 80 dans l'hestorique.

### ls
La commande `ls` r√©pertorie les fichiers et les r√©pertoires dans le syst√®me de fichiers et affiche des informations d√©taill√©es sur eux. 

##### Exembles :
- `ls -l` : pour afficher le format de liste longue.
- ls -l -a = ls -la = ls -al = ls -ll : pour afficher le format de liste longue avec les fichier cach√©s.

### cd
La commande `cd` vous permet de changer de r√©pertoire (`cd` = change directory). 
Quand vous ouvrez un terminal en mode utilisateur vous √™tes dans votre r√©pertoire personnel (/home/utilisateur). 

Pour "remonter" d'un r√©pertoire (aller √† son parent) on utilise la commande `cd ..`

### pwd
Son nom signifie en anglais ¬´ print working directory ¬ª. Elle permet d'afficher le chemin d'acc√®s vers le r√©pertoire o√π se situe l'utilisateur qui a entr√© la commande.

### xdg-open
 La commande `xdg-open` dans le syst√®me Linux est utilis√©e pour ouvrir un fichier ou une URL dans l'application pr√©f√©r√©e de l'utilisateur.
 Exemple : `xdg-open /Download`

 ### mkdir 
 C'est pour cr√©er un dossier

 ### touch
 C'est pour cr√©er des fichiers vides


 ### rm
 La commande `rm` est utilis√©e pour supprimer des fichiers et des r√©pertoires sous Linux en ligne de commandes. 
 - `rm FICHIER` pour supprimer un fichier
 - `rm /tmp/exemple.txt` pour supprimer le fichier /tmp/exemple.txt depuis n'importe quel emplacement .
 - `rm -r` pour supprimer un r√©pertoires vide
 - `rm -d` pour supprimer un r√©pertoires non vide


 ### cp
 `cp` signifie copie. Cette commande est utilis√©e pour copier des fichiers ou un groupe de fichiers ou de r√©pertoires. 

 ### mv
 La commande `mv` (pour move) permet de d√©placer un fichier, r√©pertoire ou tout arborescence sur Linux. 

 ### touch
 La commande `touch` de Linux est principalement utilis√©e pour cr√©er des fichiers vides
- `touch file{1..100}.txt` cette commande va cr√©er les fichiers : file1.txt, file2.txt, ... file100.txt

### cat
la commande `cat nomdufichier.txt` va visualiser le contenu d'un fichier

### less
Affiche le contenu d'un fichier ou d'une sortie de commande, une page √† la fois. 

### head & tail
- `head` pour afficher le d√©but d'un fichier (texte).
- `tail` pour imprimer les derniers num√©ros ou la queue d'une entr√©e. 

### nano
Pour √©diter un texte (`ctrl+x` pour sortir)


## Exemple : 
la commande : `mkdir -p A/B/C/D/E` va cr√©er un dossier A et sous-dossier B dans A et sous-dossier C dans B ....
la commande : `touch {A, A/B, A/B/C, A/B/C/D, A/B/C/D/E}/test.txt` va cr√©er un fichier text.txt dans A et dans le sou-dossier B et dans le sous-sous-dossier C et ....
""")